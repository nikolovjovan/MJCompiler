// generated with ast extension for cup
// version 0.8
// 20/2/2020 12:43:10


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(OptMethodDeclList OptMethodDeclList);
    public void visit(DesignatorPart DesignatorPart);
    public void visit(Factor Factor);
    public void visit(OptSign OptSign);
    public void visit(Statement Statement);
    public void visit(OptAbstractClassMethodDeclList OptAbstractClassMethodDeclList);
    public void visit(ActualParam ActualParam);
    public void visit(MethodDecl MethodDecl);
    public void visit(OptStatementList OptStatementList);
    public void visit(AddopLeft AddopLeft);
    public void visit(AddopRight AddopRight);
    public void visit(AbstractClassMethodDeclList AbstractClassMethodDeclList);
    public void visit(ProgramDecl ProgramDecl);
    public void visit(ConstAssignmentList ConstAssignmentList);
    public void visit(OptProgramDeclList OptProgramDeclList);
    public void visit(AbstractClassMethodDecl AbstractClassMethodDecl);
    public void visit(OptClassBaseType OptClassBaseType);
    public void visit(AbstractMethodDecl AbstractMethodDecl);
    public void visit(Relop Relop);
    public void visit(MulopRight MulopRight);
    public void visit(FormalParamList FormalParamList);
    public void visit(OptAddopExprList OptAddopExprList);
    public void visit(ClassMethodDecl ClassMethodDecl);
    public void visit(ClassVarList ClassVarList);
    public void visit(MulopLeft MulopLeft);
    public void visit(Expr Expr);
    public void visit(OptClassMethodDeclList OptClassMethodDeclList);
    public void visit(AbstractClassDecl AbstractClassDecl);
    public void visit(VarDecl VarDecl);
    public void visit(ClassMethodDeclList ClassMethodDeclList);
    public void visit(OptMulopExprList OptMulopExprList);
    public void visit(OptDesignatorStatement OptDesignatorStatement);
    public void visit(ForCondition ForCondition);
    public void visit(OptFormalParamList OptFormalParamList);
    public void visit(ClassVar ClassVar);
    public void visit(OptClassVarDeclList OptClassVarDeclList);
    public void visit(ActualParamList ActualParamList);
    public void visit(PrintExpr PrintExpr);
    public void visit(LocalVarDecl LocalVarDecl);
    public void visit(Condition Condition);
    public void visit(Const Const);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(OptDesignatorPartList OptDesignatorPartList);
    public void visit(Addop Addop);
    public void visit(Assignop Assignop);
    public void visit(ConstDecl ConstDecl);
    public void visit(LocalVar LocalVar);
    public void visit(ConstFactor ConstFactor);
    public void visit(OptElseStatement OptElseStatement);
    public void visit(FormalParam FormalParam);
    public void visit(OptExpr OptExpr);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(OptActualParamList OptActualParamList);
    public void visit(ClassVarDecl ClassVarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(AssignExpr AssignExpr);
    public void visit(OptArrayBrackets OptArrayBrackets);
    public void visit(CondFact CondFact);
    public void visit(RetType RetType);
    public void visit(OptLocalVarDeclList OptLocalVarDeclList);
    public void visit(LocalVarList LocalVarList);
    public void visit(Var Var);
    public void visit(AccessModifier AccessModifier);
    public void visit(MulAssignOperator MulAssignOperator);
    public void visit(AddAssignOperator AddAssignOperator);
    public void visit(AssignOperator AssignOperator);
    public void visit(ModAssign ModAssign);
    public void visit(DivAssign DivAssign);
    public void visit(MulAssign MulAssign);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(MulRightOperator MulRightOperator);
    public void visit(MulLeftOperator MulLeftOperator);
    public void visit(NoMulopExpressions NoMulopExpressions);
    public void visit(MulopExpressions MulopExpressions);
    public void visit(ConstFactorBool ConstFactorBool);
    public void visit(ConstFactorChar ConstFactorChar);
    public void visit(ConstFactorInt ConstFactorInt);
    public void visit(ParenthesesExpressionFactor ParenthesesExpressionFactor);
    public void visit(ArrayAllocateFactor ArrayAllocateFactor);
    public void visit(ObjectAllocateFactor ObjectAllocateFactor);
    public void visit(ConstantFactor ConstantFactor);
    public void visit(FunctionCallFactor FunctionCallFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(Term Term);
    public void visit(SubAssign SubAssign);
    public void visit(AddAssign AddAssign);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(AddRightOperator AddRightOperator);
    public void visit(AddLeftOperator AddLeftOperator);
    public void visit(NoAddopExpressions NoAddopExpressions);
    public void visit(AddopExpressions AddopExpressions);
    public void visit(LessOrEqualOperator LessOrEqualOperator);
    public void visit(LessThanOperator LessThanOperator);
    public void visit(GreaterOrEqualOperator GreaterOrEqualOperator);
    public void visit(GreaterThanOperator GreaterThanOperator);
    public void visit(InequalityOperator InequalityOperator);
    public void visit(EqualityOperator EqualityOperator);
    public void visit(ComplexFact ComplexFact);
    public void visit(SimpleFact SimpleFact);
    public void visit(SingleConditionFact SingleConditionFact);
    public void visit(MultipleConditionFacts MultipleConditionFacts);
    public void visit(SingleConditionTerm SingleConditionTerm);
    public void visit(MultipleConditionTerms MultipleConditionTerms);
    public void visit(ErrorCondition ErrorCondition);
    public void visit(NoCondition NoCondition);
    public void visit(SingleCondition SingleCondition);
    public void visit(ActualParameter ActualParameter);
    public void visit(SingleActualParameter SingleActualParameter);
    public void visit(MultipleActualParameters MultipleActualParameters);
    public void visit(NoActualParameters NoActualParameters);
    public void visit(ActualParameters ActualParameters);
    public void visit(Expression Expression);
    public void visit(NoExpression NoExpression);
    public void visit(SingleExpression SingleExpression);
    public void visit(ArrayAccess ArrayAccess);
    public void visit(FieldAccess FieldAccess);
    public void visit(NoDesignatorParts NoDesignatorParts);
    public void visit(DesignatorParts DesignatorParts);
    public void visit(Designator Designator);
    public void visit(ErrorAssignmentExpression ErrorAssignmentExpression);
    public void visit(AssignmentExpression AssignmentExpression);
    public void visit(PrintExpressionAndConst PrintExpressionAndConst);
    public void visit(PrintOnlyExpression PrintOnlyExpression);
    public void visit(NoElseStatment NoElseStatment);
    public void visit(ElseStatement ElseStatement);
    public void visit(VariableDecrement VariableDecrement);
    public void visit(VariableIncrement VariableIncrement);
    public void visit(Assignment Assignment);
    public void visit(MethodCall MethodCall);
    public void visit(NoDesignatorStatement NoDesignatorStatement);
    public void visit(SingleDesignatorStatement SingleDesignatorStatement);
    public void visit(StatementBlock StatementBlock);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(ForEachStatement ForEachStatement);
    public void visit(ForStatement ForStatement);
    public void visit(IfOptElseStatement IfOptElseStatement);
    public void visit(SingleStatement SingleStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(ErrorLocalVariable ErrorLocalVariable);
    public void visit(LocalVariable LocalVariable);
    public void visit(SingleLocalVariable SingleLocalVariable);
    public void visit(LocalVariables LocalVariables);
    public void visit(ErrorLocalVarDeclaration ErrorLocalVarDeclaration);
    public void visit(LocalVarDeclaration LocalVarDeclaration);
    public void visit(NoLocalVarDeclarations NoLocalVarDeclarations);
    public void visit(LocalVarDeclarations LocalVarDeclarations);
    public void visit(ErrorFormalParameter ErrorFormalParameter);
    public void visit(FormalParameter FormalParameter);
    public void visit(SingleFormalParameter SingleFormalParameter);
    public void visit(MultipleFormalParameters MultipleFormalParameters);
    public void visit(NoFormalParameters NoFormalParameters);
    public void visit(FormalParameters FormalParameters);
    public void visit(ReturnVoid ReturnVoid);
    public void visit(ReturnType ReturnType);
    public void visit(AbstractMethodHeader AbstractMethodHeader);
    public void visit(AbstractMethodDeclaration AbstractMethodDeclaration);
    public void visit(MethodHeader MethodHeader);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(ErrorAbstractClassMethodDeclaration ErrorAbstractClassMethodDeclaration);
    public void visit(AbstractClassAbstractMethodDeclaration AbstractClassAbstractMethodDeclaration);
    public void visit(AbstractClassMethodDeclaration AbstractClassMethodDeclaration);
    public void visit(SingleAbstractClassMethod SingleAbstractClassMethod);
    public void visit(MultipleAbstractClassMethods MultipleAbstractClassMethods);
    public void visit(NoAbstractClassMethods NoAbstractClassMethods);
    public void visit(AbstractClassMethods AbstractClassMethods);
    public void visit(AbstractClassHeader AbstractClassHeader);
    public void visit(AbstractClassDeclaration AbstractClassDeclaration);
    public void visit(ClassMethodDeclaration ClassMethodDeclaration);
    public void visit(SingleClassMethodDeclaration SingleClassMethodDeclaration);
    public void visit(MultipleClassMethodDeclarations MultipleClassMethodDeclarations);
    public void visit(NoClassMethodDeclarations NoClassMethodDeclarations);
    public void visit(ClassMethodDeclarations ClassMethodDeclarations);
    public void visit(ClassVariable ClassVariable);
    public void visit(SingleClassVariable SingleClassVariable);
    public void visit(ClassVariables ClassVariables);
    public void visit(ClassVarDeclaration ClassVarDeclaration);
    public void visit(NoClassVarDeclarations NoClassVarDeclarations);
    public void visit(ClassVarDeclarations ClassVarDeclarations);
    public void visit(ErrorClassBaseTypeBeforeExtends ErrorClassBaseTypeBeforeExtends);
    public void visit(ErrorClassBaseTypeAfterExtends ErrorClassBaseTypeAfterExtends);
    public void visit(NoClassBaseType NoClassBaseType);
    public void visit(ClassBaseType ClassBaseType);
    public void visit(PrivateAccess PrivateAccess);
    public void visit(ProtectedAccess ProtectedAccess);
    public void visit(PublicAccess PublicAccess);
    public void visit(ClassHeader ClassHeader);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(NoArrayBrackets NoArrayBrackets);
    public void visit(ArrayBrackets ArrayBrackets);
    public void visit(Variable Variable);
    public void visit(SingleVariable SingleVariable);
    public void visit(Variables Variables);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ImplicitlyPositive ImplicitlyPositive);
    public void visit(ExplicitlyPositive ExplicitlyPositive);
    public void visit(Negative Negative);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstInt ConstInt);
    public void visit(ConstAssignment ConstAssignment);
    public void visit(SingleConstAssignment SingleConstAssignment);
    public void visit(ConstAssignments ConstAssignments);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ProgramAbstractClassDeclaration ProgramAbstractClassDeclaration);
    public void visit(ProgramClassDeclaration ProgramClassDeclaration);
    public void visit(ProgramVarDeclaration ProgramVarDeclaration);
    public void visit(ProgramConstDeclaration ProgramConstDeclaration);
    public void visit(NoProgramDeclarations NoProgramDeclarations);
    public void visit(ProgramDeclarations ProgramDeclarations);
    public void visit(Type Type);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
