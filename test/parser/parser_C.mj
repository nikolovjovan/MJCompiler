// level C syntax test
program level_c_syntax_test
    // constant declarations
    const int A = 1, B = 2, C = 3;
    const char X = 'x', Y = 'y';
    const bool VALID = true;

    // variable declarations
    int a, b[], c;
    Point p1, p2;

    // class declarations
    class Point extends IPoint {
        public int x, y;
        {
            public int get_x() { return x; }
            public int diff_x(IPoint a) { return a.get_x() - x; }
        }
    }

    // abstract class declarations
    abstract class IPoint {
        {
            public abstract int get_x();
            public abstract int diff_x(IPoint a);
        }
    }

    const char SPACE = ' ';

    int x, y;

    abstract class Object {
        {
            public abstract void println();
        }
    }

    class Point extends Object
    {
        private int x, y;
        {
            public int getX() { return x; }
            public void setX(int x) { this.x = x; }

            public int getY() { return y; }
            public void setY(int y) { this.y = y; }

            public void println() {
                print(x);
                print(SPACE);
                print(y);
                print(eol);
            }
        }
    }
{
    int k()
        int c;
    {
        c = 1;
        return c + 2;
    }

    void printArray(int arr[])
        int it;
    {
        foreach (it : arr) {
            print(it);
            print(SPACE);
        }
        print(eol);
    }

    void main()
        int i, arr[];
        Point p;
    {
        y = 2;
        print(y); print(eol);
        x = y + 2;
        print(x); print(eol);
        y = k() + 3;
        print(y);
        p = new Point;
        p.x = x;
        p.y = y;
        p.printPoint();
        arr = new int[6];
        for (i = 0; i < len(arr); i++) {
            arr[i] = i * 7 - 2;
        }
        printArray(arr);
    }
}