DEBUG - generator_C3.mj:2:1: LEXER: Found symbol: '#2' with value: 'program'
DEBUG - generator_C3.mj:2:9: LEXER: Found symbol: '#55' with value: 'Program'
DEBUG - generator_C3.mj:3:5: LEXER: Found symbol: '#5' with value: 'abstract'
DEBUG - generator_C3.mj:3:14: LEXER: Found symbol: '#4' with value: 'class'
DEBUG - generator_C3.mj:3:20: LEXER: Found symbol: '#55' with value: 'A'
DEBUG - generator_C3.mj:3:22: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:4:9: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:4:16: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:4:20: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:4:21: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:4:22: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:4:23: LEXER: Found symbol: '#50' with value: ','
DEBUG - generator_C3.mj:4:25: LEXER: Found symbol: '#55' with value: 'y'
DEBUG - generator_C3.mj:4:26: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:4:27: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:4:28: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:5:9: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:6:13: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:6:20: LEXER: Found symbol: '#5' with value: 'abstract'
DEBUG - generator_C3.mj:6:29: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:6:33: LEXER: Found symbol: '#55' with value: 'getValue'
DEBUG - generator_C3.mj:6:41: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:6:42: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:6:46: LEXER: Found symbol: '#55' with value: 'a'
DEBUG - generator_C3.mj:6:47: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:6:48: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:7:9: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:8:5: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:9:5: LEXER: Found symbol: '#7' with value: 'const'
DEBUG - generator_C3.mj:9:11: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:9:15: LEXER: Found symbol: '#55' with value: 'pi'
DEBUG - generator_C3.mj:9:18: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:9:20: LEXER: Found symbol: '#52' with value: '3'
DEBUG - generator_C3.mj:9:21: LEXER: Found symbol: '#50' with value: ','
DEBUG - generator_C3.mj:9:23: LEXER: Found symbol: '#55' with value: 'e'
DEBUG - generator_C3.mj:9:25: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:9:27: LEXER: Found symbol: '#52' with value: '2'
DEBUG - generator_C3.mj:9:28: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:10:5: LEXER: Found symbol: '#4' with value: 'class'
DEBUG - generator_C3.mj:10:11: LEXER: Found symbol: '#55' with value: 'B'
DEBUG - generator_C3.mj:10:13: LEXER: Found symbol: '#15' with value: 'extends'
DEBUG - generator_C3.mj:10:21: LEXER: Found symbol: '#55' with value: 'A'
DEBUG - generator_C3.mj:10:23: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:11:9: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:11:16: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:11:20: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:11:21: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:12:9: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:13:13: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:13:20: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:13:24: LEXER: Found symbol: '#55' with value: 'getValue'
DEBUG - generator_C3.mj:13:32: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:13:33: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:13:37: LEXER: Found symbol: '#55' with value: 'a'
DEBUG - generator_C3.mj:13:38: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:13:40: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:13:44: LEXER: Found symbol: '#55' with value: 'b'
DEBUG - generator_C3.mj:13:45: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:13:47: LEXER: Found symbol: '#55' with value: 'bool'
DEBUG - generator_C3.mj:13:52: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:13:53: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:13:55: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:14:17: LEXER: Found symbol: '#12' with value: 'return'
DEBUG - generator_C3.mj:14:24: LEXER: Found symbol: '#55' with value: 'this'
DEBUG - generator_C3.mj:14:28: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:14:29: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:14:31: LEXER: Found symbol: '#22' with value: '+'
DEBUG - generator_C3.mj:14:33: LEXER: Found symbol: '#55' with value: 'this'
DEBUG - generator_C3.mj:14:37: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:14:38: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:14:39: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:14:40: LEXER: Found symbol: '#52' with value: '0'
DEBUG - generator_C3.mj:14:41: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:14:43: LEXER: Found symbol: '#22' with value: '+'
DEBUG - generator_C3.mj:14:45: LEXER: Found symbol: '#55' with value: 'a'
DEBUG - generator_C3.mj:14:46: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:15:13: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:16:13: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:16:20: LEXER: Found symbol: '#13' with value: 'void'
DEBUG - generator_C3.mj:16:25: LEXER: Found symbol: '#55' with value: 'm'
DEBUG - generator_C3.mj:16:26: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:16:27: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:16:29: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:16:30: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:17:9: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:18:5: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:19:5: LEXER: Found symbol: '#4' with value: 'class'
DEBUG - generator_C3.mj:19:11: LEXER: Found symbol: '#55' with value: 'C'
DEBUG - generator_C3.mj:19:13: LEXER: Found symbol: '#15' with value: 'extends'
DEBUG - generator_C3.mj:19:21: LEXER: Found symbol: '#55' with value: 'B'
DEBUG - generator_C3.mj:19:23: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:19:25: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:19:32: LEXER: Found symbol: '#55' with value: 'B'
DEBUG - generator_C3.mj:19:34: LEXER: Found symbol: '#55' with value: 'theA'
DEBUG - generator_C3.mj:19:38: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:19:40: LEXER: Found symbol: '#18' with value: 'public'
DEBUG - generator_C3.mj:19:47: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:19:51: LEXER: Found symbol: '#55' with value: 'a'
DEBUG - generator_C3.mj:19:52: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:19:54: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:20:1: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:21:5: LEXER: Found symbol: '#13' with value: 'void'
DEBUG - generator_C3.mj:21:10: LEXER: Found symbol: '#55' with value: 'main'
DEBUG - generator_C3.mj:21:14: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:21:15: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:21:17: LEXER: Found symbol: '#55' with value: 'B'
DEBUG - generator_C3.mj:21:19: LEXER: Found symbol: '#55' with value: 'b'
DEBUG - generator_C3.mj:21:20: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:21:22: LEXER: Found symbol: '#55' with value: 'C'
DEBUG - generator_C3.mj:21:24: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:21:25: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:21:27: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:21:31: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:21:32: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:21:34: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:21:38: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:21:39: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:21:40: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:21:41: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:21:43: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:22:9: LEXER: Found symbol: '#55' with value: 'b'
DEBUG - generator_C3.mj:22:11: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:22:13: LEXER: Found symbol: '#9' with value: 'new'
DEBUG - generator_C3.mj:22:17: LEXER: Found symbol: '#55' with value: 'B'
DEBUG - generator_C3.mj:22:18: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:23:9: LEXER: Found symbol: '#55' with value: 'b'
DEBUG - generator_C3.mj:23:10: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:23:11: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:23:13: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:23:15: LEXER: Found symbol: '#9' with value: 'new'
DEBUG - generator_C3.mj:23:19: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:23:22: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:23:23: LEXER: Found symbol: '#52' with value: '5'
DEBUG - generator_C3.mj:23:24: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:23:25: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:24:9: LEXER: Found symbol: '#55' with value: 'b'
DEBUG - generator_C3.mj:24:10: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:24:11: LEXER: Found symbol: '#55' with value: 'y'
DEBUG - generator_C3.mj:24:13: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:24:15: LEXER: Found symbol: '#9' with value: 'new'
DEBUG - generator_C3.mj:24:19: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:24:22: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:24:23: LEXER: Found symbol: '#52' with value: '5'
DEBUG - generator_C3.mj:24:24: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:24:25: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:25:9: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:25:11: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:25:13: LEXER: Found symbol: '#9' with value: 'new'
DEBUG - generator_C3.mj:25:17: LEXER: Found symbol: '#55' with value: 'C'
DEBUG - generator_C3.mj:25:18: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:26:9: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:26:10: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:26:11: LEXER: Found symbol: '#55' with value: 'theA'
DEBUG - generator_C3.mj:26:16: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:26:18: LEXER: Found symbol: '#55' with value: 'b'
DEBUG - generator_C3.mj:26:19: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:27:9: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:27:10: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:27:11: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:27:13: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:27:15: LEXER: Found symbol: '#9' with value: 'new'
DEBUG - generator_C3.mj:27:19: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:27:22: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:27:23: LEXER: Found symbol: '#52' with value: '5'
DEBUG - generator_C3.mj:27:24: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:27:25: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:28:9: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:28:11: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:28:13: LEXER: Found symbol: '#9' with value: 'new'
DEBUG - generator_C3.mj:28:17: LEXER: Found symbol: '#55' with value: 'int'
DEBUG - generator_C3.mj:28:20: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:28:21: LEXER: Found symbol: '#52' with value: '3'
DEBUG - generator_C3.mj:28:22: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:28:23: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:29:9: LEXER: Found symbol: '#11' with value: 'read'
DEBUG - generator_C3.mj:29:13: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:29:14: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:29:15: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:29:16: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:29:17: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:29:18: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:30:9: LEXER: Found symbol: '#14' with value: 'for'
DEBUG - generator_C3.mj:30:12: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:30:13: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:30:14: LEXER: Found symbol: '#21' with value: '='
DEBUG - generator_C3.mj:30:15: LEXER: Found symbol: '#52' with value: '0'
DEBUG - generator_C3.mj:30:16: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:30:18: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:30:19: LEXER: Found symbol: '#33' with value: '<'
DEBUG - generator_C3.mj:30:20: LEXER: Found symbol: '#52' with value: '5'
DEBUG - generator_C3.mj:30:21: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:30:23: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:30:24: LEXER: Found symbol: '#27' with value: '++'
DEBUG - generator_C3.mj:30:26: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:30:28: LEXER: Found symbol: '#46' with value: '{'
DEBUG - generator_C3.mj:31:13: LEXER: Found symbol: '#11' with value: 'read'
DEBUG - generator_C3.mj:31:17: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:31:18: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:31:19: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:31:20: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:31:21: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:31:22: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:31:23: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:31:24: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:31:25: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:32:13: LEXER: Found symbol: '#11' with value: 'read'
DEBUG - generator_C3.mj:32:17: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:32:18: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:32:19: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:32:20: LEXER: Found symbol: '#55' with value: 'theA'
DEBUG - generator_C3.mj:32:24: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:32:25: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:32:26: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:32:27: LEXER: Found symbol: '#55' with value: 'i'
DEBUG - generator_C3.mj:32:28: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:32:29: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:32:30: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:33:9: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:34:9: LEXER: Found symbol: '#10' with value: 'print'
DEBUG - generator_C3.mj:34:14: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:34:15: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:34:16: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:34:17: LEXER: Found symbol: '#55' with value: 'getValue'
DEBUG - generator_C3.mj:34:25: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:34:26: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:34:27: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:34:28: LEXER: Found symbol: '#55' with value: 'theA'
DEBUG - generator_C3.mj:34:32: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:34:33: LEXER: Found symbol: '#55' with value: 'x'
DEBUG - generator_C3.mj:34:34: LEXER: Found symbol: '#44' with value: '['
DEBUG - generator_C3.mj:34:35: LEXER: Found symbol: '#52' with value: '0'
DEBUG - generator_C3.mj:34:36: LEXER: Found symbol: '#45' with value: ']'
DEBUG - generator_C3.mj:34:37: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:34:38: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:34:39: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:35:9: LEXER: Found symbol: '#55' with value: 'c'
DEBUG - generator_C3.mj:35:10: LEXER: Found symbol: '#51' with value: '.'
DEBUG - generator_C3.mj:35:11: LEXER: Found symbol: '#55' with value: 'm'
DEBUG - generator_C3.mj:35:12: LEXER: Found symbol: '#42' with value: '('
DEBUG - generator_C3.mj:35:13: LEXER: Found symbol: '#43' with value: ')'
DEBUG - generator_C3.mj:35:14: LEXER: Found symbol: '#49' with value: ';'
DEBUG - generator_C3.mj:36:5: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:37:1: LEXER: Found symbol: '#47' with value: '}'
DEBUG - generator_C3.mj:37:2: LEXER: Found symbol: '#0' with value: ''
DEBUG - generator_C3.mj:37:2: LEXER: Found symbol: '#0' with value: ''
INFO  - Abstract syntax tree: Program(
  ProgramHeader(
   Program
  ) [ProgramHeader]
  MultipleProgramDeclarations(
    MultipleProgramDeclarations(
      MultipleProgramDeclarations(
        MultipleProgramDeclarations(
          NoProgramDeclarations(
          ) [NoProgramDeclarations]
          AbstractClassProgramDeclaration(
            AbstractClassDeclaration(
              AbstractClassHeader(
               A
                NoClassBaseType(
                ) [NoClassBaseType]
              ) [AbstractClassHeader]
              MultipleClassVarDeclarations(
                NoClassVarDeclarations(
                ) [NoClassVarDeclarations]
                ClassVarDeclaration(
                  PublicAccessModifier(
                  ) [PublicAccessModifier]
                  Type(
                   int
                  ) [Type]
                  MultipleClassVariables(
                    SingleClassVariable(
                      ClassVariable(
                       x
                        ArrayBrackets(
                        ) [ArrayBrackets]
                      ) [ClassVariable]
                    ) [SingleClassVariable]
                    ClassVariable(
                     y
                      ArrayBrackets(
                      ) [ArrayBrackets]
                    ) [ClassVariable]
                  ) [MultipleClassVariables]
                ) [ClassVarDeclaration]
              ) [MultipleClassVarDeclarations]
              AbstractClassMethods(
                SingleAbstractClassMethod(
                  AbstractClassAbstractMethodDeclaration(
                    PublicAccessModifier(
                    ) [PublicAccessModifier]
                    AbstractMethodDeclaration(
                      AbstractMethodHeader(
                        ReturnType(
                          Type(
                           int
                          ) [Type]
                        ) [ReturnType]
                       getValue
                      ) [AbstractMethodHeader]
                      FormalParameters(
                        SingleFormalParameter(
                          FormalParameter(
                            Type(
                             int
                            ) [Type]
                           a
                            NoArrayBrackets(
                            ) [NoArrayBrackets]
                          ) [FormalParameter]
                        ) [SingleFormalParameter]
                      ) [FormalParameters]
                    ) [AbstractMethodDeclaration]
                  ) [AbstractClassAbstractMethodDeclaration]
                ) [SingleAbstractClassMethod]
              ) [AbstractClassMethods]
            ) [AbstractClassDeclaration]
          ) [AbstractClassProgramDeclaration]
        ) [MultipleProgramDeclarations]
        ConstProgramDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            MultipleConstAssignments(
              SingleConstAssignment(
                ConstAssignment(
                 pi
                  IntConst(
                    NoSign(
                    ) [NoSign]
                   3
                  ) [IntConst]
                ) [ConstAssignment]
              ) [SingleConstAssignment]
              ConstAssignment(
               e
                IntConst(
                  NoSign(
                  ) [NoSign]
                 2
                ) [IntConst]
              ) [ConstAssignment]
            ) [MultipleConstAssignments]
          ) [ConstDeclaration]
        ) [ConstProgramDeclaration]
      ) [MultipleProgramDeclarations]
      ClassProgramDeclaration(
        ClassDeclaration(
          ClassHeader(
           B
            ClassBaseType(
              Type(
               A
              ) [Type]
            ) [ClassBaseType]
          ) [ClassHeader]
          MultipleClassVarDeclarations(
            NoClassVarDeclarations(
            ) [NoClassVarDeclarations]
            ClassVarDeclaration(
              PublicAccessModifier(
              ) [PublicAccessModifier]
              Type(
               int
              ) [Type]
              SingleClassVariable(
                ClassVariable(
                 i
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [ClassVariable]
              ) [SingleClassVariable]
            ) [ClassVarDeclaration]
          ) [MultipleClassVarDeclarations]
          ClassMethodDeclarations(
            MultipleClassMethodDeclarations(
              SingleClassMethodDeclaration(
                ClassMethodDeclaration(
                  PublicAccessModifier(
                  ) [PublicAccessModifier]
                  MethodDeclaration(
                    MethodHeader(
                      ReturnType(
                        Type(
                         int
                        ) [Type]
                      ) [ReturnType]
                     getValue
                    ) [MethodHeader]
                    FormalParameters(
                      SingleFormalParameter(
                        FormalParameter(
                          Type(
                           int
                          ) [Type]
                         a
                          NoArrayBrackets(
                          ) [NoArrayBrackets]
                        ) [FormalParameter]
                      ) [SingleFormalParameter]
                    ) [FormalParameters]
                    MultipleLocalVarDeclarations(
                      MultipleLocalVarDeclarations(
                        NoLocalVarDeclarations(
                        ) [NoLocalVarDeclarations]
                        LocalVarDeclaration(
                          Type(
                           int
                          ) [Type]
                          SingleLocalVariable(
                            LocalVariable(
                             b
                              NoArrayBrackets(
                              ) [NoArrayBrackets]
                            ) [LocalVariable]
                          ) [SingleLocalVariable]
                        ) [LocalVarDeclaration]
                      ) [MultipleLocalVarDeclarations]
                      LocalVarDeclaration(
                        Type(
                         bool
                        ) [Type]
                        SingleLocalVariable(
                          LocalVariable(
                           c
                            NoArrayBrackets(
                            ) [NoArrayBrackets]
                          ) [LocalVariable]
                        ) [SingleLocalVariable]
                      ) [LocalVarDeclaration]
                    ) [MultipleLocalVarDeclarations]
                    MethodStatementListStart(
                    ) [MethodStatementListStart]
                    MultipleStatements(
                      NoStatements(
                      ) [NoStatements]
                      ReturnStatement(
                        ReturnValue(
                          LeftExpression(
                            MultipleTermsExpression(
                              MultipleTermsExpression(
                                SingleTermExpression(
                                  NoSign(
                                  ) [NoSign]
                                  SingleFactorTerm(
                                    DesignatorFactor(
                                      MemberAccessDesignator(
                                        IdentifierDesignator(
                                         this
                                        ) [IdentifierDesignator]
                                       i
                                      ) [MemberAccessDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExpression]
                                AddOperator(
                                ) [AddOperator]
                                SingleFactorTerm(
                                  DesignatorFactor(
                                    ElementAccessDesignator(
                                      MemberAccessDesignator(
                                        IdentifierDesignator(
                                         this
                                        ) [IdentifierDesignator]
                                       x
                                      ) [MemberAccessDesignator]
                                      ArrayIndexer(
                                        LeftExpression(
                                          SingleTermExpression(
                                            NoSign(
                                            ) [NoSign]
                                            SingleFactorTerm(
                                              ConstantFactor(
                                                IntConstantFactor(
                                                 0
                                                ) [IntConstantFactor]
                                              ) [ConstantFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExpression]
                                        ) [LeftExpression]
                                      ) [ArrayIndexer]
                                    ) [ElementAccessDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactorTerm]
                              ) [MultipleTermsExpression]
                              AddOperator(
                              ) [AddOperator]
                              SingleFactorTerm(
                                DesignatorFactor(
                                  IdentifierDesignator(
                                   a
                                  ) [IdentifierDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactorTerm]
                            ) [MultipleTermsExpression]
                          ) [LeftExpression]
                        ) [ReturnValue]
                      ) [ReturnStatement]
                    ) [MultipleStatements]
                  ) [MethodDeclaration]
                ) [ClassMethodDeclaration]
              ) [SingleClassMethodDeclaration]
              ClassMethodDeclaration(
                PublicAccessModifier(
                ) [PublicAccessModifier]
                MethodDeclaration(
                  MethodHeader(
                    ReturnVoid(
                    ) [ReturnVoid]
                   m
                  ) [MethodHeader]
                  NoFormalParameters(
                  ) [NoFormalParameters]
                  NoLocalVarDeclarations(
                  ) [NoLocalVarDeclarations]
                  MethodStatementListStart(
                  ) [MethodStatementListStart]
                  NoStatements(
                  ) [NoStatements]
                ) [MethodDeclaration]
              ) [ClassMethodDeclaration]
            ) [MultipleClassMethodDeclarations]
          ) [ClassMethodDeclarations]
        ) [ClassDeclaration]
      ) [ClassProgramDeclaration]
    ) [MultipleProgramDeclarations]
    ClassProgramDeclaration(
      ClassDeclaration(
        ClassHeader(
         C
          ClassBaseType(
            Type(
             B
            ) [Type]
          ) [ClassBaseType]
        ) [ClassHeader]
        MultipleClassVarDeclarations(
          MultipleClassVarDeclarations(
            NoClassVarDeclarations(
            ) [NoClassVarDeclarations]
            ClassVarDeclaration(
              PublicAccessModifier(
              ) [PublicAccessModifier]
              Type(
               B
              ) [Type]
              SingleClassVariable(
                ClassVariable(
                 theA
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [ClassVariable]
              ) [SingleClassVariable]
            ) [ClassVarDeclaration]
          ) [MultipleClassVarDeclarations]
          ClassVarDeclaration(
            PublicAccessModifier(
            ) [PublicAccessModifier]
            Type(
             int
            ) [Type]
            SingleClassVariable(
              ClassVariable(
               a
                NoArrayBrackets(
                ) [NoArrayBrackets]
              ) [ClassVariable]
            ) [SingleClassVariable]
          ) [ClassVarDeclaration]
        ) [MultipleClassVarDeclarations]
        NoClassMethodDeclarations(
        ) [NoClassMethodDeclarations]
      ) [ClassDeclaration]
    ) [ClassProgramDeclaration]
  ) [MultipleProgramDeclarations]
  MultipleMethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDeclaration(
      MethodHeader(
        ReturnVoid(
        ) [ReturnVoid]
       main
      ) [MethodHeader]
      NoFormalParameters(
      ) [NoFormalParameters]
      MultipleLocalVarDeclarations(
        MultipleLocalVarDeclarations(
          MultipleLocalVarDeclarations(
            MultipleLocalVarDeclarations(
              NoLocalVarDeclarations(
              ) [NoLocalVarDeclarations]
              LocalVarDeclaration(
                Type(
                 B
                ) [Type]
                SingleLocalVariable(
                  LocalVariable(
                   b
                    NoArrayBrackets(
                    ) [NoArrayBrackets]
                  ) [LocalVariable]
                ) [SingleLocalVariable]
              ) [LocalVarDeclaration]
            ) [MultipleLocalVarDeclarations]
            LocalVarDeclaration(
              Type(
               C
              ) [Type]
              SingleLocalVariable(
                LocalVariable(
                 c
                  NoArrayBrackets(
                  ) [NoArrayBrackets]
                ) [LocalVariable]
              ) [SingleLocalVariable]
            ) [LocalVarDeclaration]
          ) [MultipleLocalVarDeclarations]
          LocalVarDeclaration(
            Type(
             int
            ) [Type]
            SingleLocalVariable(
              LocalVariable(
               i
                NoArrayBrackets(
                ) [NoArrayBrackets]
              ) [LocalVariable]
            ) [SingleLocalVariable]
          ) [LocalVarDeclaration]
        ) [MultipleLocalVarDeclarations]
        LocalVarDeclaration(
          Type(
           int
          ) [Type]
          SingleLocalVariable(
            LocalVariable(
             x
              ArrayBrackets(
              ) [ArrayBrackets]
            ) [LocalVariable]
          ) [SingleLocalVariable]
        ) [LocalVarDeclaration]
      ) [MultipleLocalVarDeclarations]
      MethodStatementListStart(
      ) [MethodStatementListStart]
      MultipleStatements(
        MultipleStatements(
          MultipleStatements(
            MultipleStatements(
              MultipleStatements(
                MultipleStatements(
                  MultipleStatements(
                    MultipleStatements(
                      MultipleStatements(
                        MultipleStatements(
                          MultipleStatements(
                            NoStatements(
                            ) [NoStatements]
                            DesignatorBasedStatement(
                              AssignmentDesignatorStatement(
                                AssignmentHeader(
                                  IdentifierDesignator(
                                   b
                                  ) [IdentifierDesignator]
                                ) [AssignmentHeader]
                                AssignmentFooter(
                                  AssignOperator(
                                  ) [AssignOperator]
                                  LeftExpression(
                                    SingleTermExpression(
                                      NoSign(
                                      ) [NoSign]
                                      SingleFactorTerm(
                                        AllocatorFactor(
                                          Type(
                                           B
                                          ) [Type]
                                          NoArrayIndexer(
                                          ) [NoArrayIndexer]
                                        ) [AllocatorFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExpression]
                                  ) [LeftExpression]
                                ) [AssignmentFooter]
                              ) [AssignmentDesignatorStatement]
                            ) [DesignatorBasedStatement]
                          ) [MultipleStatements]
                          DesignatorBasedStatement(
                            AssignmentDesignatorStatement(
                              AssignmentHeader(
                                MemberAccessDesignator(
                                  IdentifierDesignator(
                                   b
                                  ) [IdentifierDesignator]
                                 x
                                ) [MemberAccessDesignator]
                              ) [AssignmentHeader]
                              AssignmentFooter(
                                AssignOperator(
                                ) [AssignOperator]
                                LeftExpression(
                                  SingleTermExpression(
                                    NoSign(
                                    ) [NoSign]
                                    SingleFactorTerm(
                                      AllocatorFactor(
                                        Type(
                                         int
                                        ) [Type]
                                        SingleArrayIndexer(
                                          ArrayIndexer(
                                            LeftExpression(
                                              SingleTermExpression(
                                                NoSign(
                                                ) [NoSign]
                                                SingleFactorTerm(
                                                  ConstantFactor(
                                                    IntConstantFactor(
                                                     5
                                                    ) [IntConstantFactor]
                                                  ) [ConstantFactor]
                                                ) [SingleFactorTerm]
                                              ) [SingleTermExpression]
                                            ) [LeftExpression]
                                          ) [ArrayIndexer]
                                        ) [SingleArrayIndexer]
                                      ) [AllocatorFactor]
                                    ) [SingleFactorTerm]
                                  ) [SingleTermExpression]
                                ) [LeftExpression]
                              ) [AssignmentFooter]
                            ) [AssignmentDesignatorStatement]
                          ) [DesignatorBasedStatement]
                        ) [MultipleStatements]
                        DesignatorBasedStatement(
                          AssignmentDesignatorStatement(
                            AssignmentHeader(
                              MemberAccessDesignator(
                                IdentifierDesignator(
                                 b
                                ) [IdentifierDesignator]
                               y
                              ) [MemberAccessDesignator]
                            ) [AssignmentHeader]
                            AssignmentFooter(
                              AssignOperator(
                              ) [AssignOperator]
                              LeftExpression(
                                SingleTermExpression(
                                  NoSign(
                                  ) [NoSign]
                                  SingleFactorTerm(
                                    AllocatorFactor(
                                      Type(
                                       int
                                      ) [Type]
                                      SingleArrayIndexer(
                                        ArrayIndexer(
                                          LeftExpression(
                                            SingleTermExpression(
                                              NoSign(
                                              ) [NoSign]
                                              SingleFactorTerm(
                                                ConstantFactor(
                                                  IntConstantFactor(
                                                   5
                                                  ) [IntConstantFactor]
                                                ) [ConstantFactor]
                                              ) [SingleFactorTerm]
                                            ) [SingleTermExpression]
                                          ) [LeftExpression]
                                        ) [ArrayIndexer]
                                      ) [SingleArrayIndexer]
                                    ) [AllocatorFactor]
                                  ) [SingleFactorTerm]
                                ) [SingleTermExpression]
                              ) [LeftExpression]
                            ) [AssignmentFooter]
                          ) [AssignmentDesignatorStatement]
                        ) [DesignatorBasedStatement]
                      ) [MultipleStatements]
                      DesignatorBasedStatement(
                        AssignmentDesignatorStatement(
                          AssignmentHeader(
                            IdentifierDesignator(
                             c
                            ) [IdentifierDesignator]
                          ) [AssignmentHeader]
                          AssignmentFooter(
                            AssignOperator(
                            ) [AssignOperator]
                            LeftExpression(
                              SingleTermExpression(
                                NoSign(
                                ) [NoSign]
                                SingleFactorTerm(
                                  AllocatorFactor(
                                    Type(
                                     C
                                    ) [Type]
                                    NoArrayIndexer(
                                    ) [NoArrayIndexer]
                                  ) [AllocatorFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExpression]
                            ) [LeftExpression]
                          ) [AssignmentFooter]
                        ) [AssignmentDesignatorStatement]
                      ) [DesignatorBasedStatement]
                    ) [MultipleStatements]
                    DesignatorBasedStatement(
                      AssignmentDesignatorStatement(
                        AssignmentHeader(
                          MemberAccessDesignator(
                            IdentifierDesignator(
                             c
                            ) [IdentifierDesignator]
                           theA
                          ) [MemberAccessDesignator]
                        ) [AssignmentHeader]
                        AssignmentFooter(
                          AssignOperator(
                          ) [AssignOperator]
                          LeftExpression(
                            SingleTermExpression(
                              NoSign(
                              ) [NoSign]
                              SingleFactorTerm(
                                DesignatorFactor(
                                  IdentifierDesignator(
                                   b
                                  ) [IdentifierDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExpression]
                          ) [LeftExpression]
                        ) [AssignmentFooter]
                      ) [AssignmentDesignatorStatement]
                    ) [DesignatorBasedStatement]
                  ) [MultipleStatements]
                  DesignatorBasedStatement(
                    AssignmentDesignatorStatement(
                      AssignmentHeader(
                        MemberAccessDesignator(
                          IdentifierDesignator(
                           c
                          ) [IdentifierDesignator]
                         x
                        ) [MemberAccessDesignator]
                      ) [AssignmentHeader]
                      AssignmentFooter(
                        AssignOperator(
                        ) [AssignOperator]
                        LeftExpression(
                          SingleTermExpression(
                            NoSign(
                            ) [NoSign]
                            SingleFactorTerm(
                              AllocatorFactor(
                                Type(
                                 int
                                ) [Type]
                                SingleArrayIndexer(
                                  ArrayIndexer(
                                    LeftExpression(
                                      SingleTermExpression(
                                        NoSign(
                                        ) [NoSign]
                                        SingleFactorTerm(
                                          ConstantFactor(
                                            IntConstantFactor(
                                             5
                                            ) [IntConstantFactor]
                                          ) [ConstantFactor]
                                        ) [SingleFactorTerm]
                                      ) [SingleTermExpression]
                                    ) [LeftExpression]
                                  ) [ArrayIndexer]
                                ) [SingleArrayIndexer]
                              ) [AllocatorFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExpression]
                        ) [LeftExpression]
                      ) [AssignmentFooter]
                    ) [AssignmentDesignatorStatement]
                  ) [DesignatorBasedStatement]
                ) [MultipleStatements]
                DesignatorBasedStatement(
                  AssignmentDesignatorStatement(
                    AssignmentHeader(
                      IdentifierDesignator(
                       x
                      ) [IdentifierDesignator]
                    ) [AssignmentHeader]
                    AssignmentFooter(
                      AssignOperator(
                      ) [AssignOperator]
                      LeftExpression(
                        SingleTermExpression(
                          NoSign(
                          ) [NoSign]
                          SingleFactorTerm(
                            AllocatorFactor(
                              Type(
                               int
                              ) [Type]
                              SingleArrayIndexer(
                                ArrayIndexer(
                                  LeftExpression(
                                    SingleTermExpression(
                                      NoSign(
                                      ) [NoSign]
                                      SingleFactorTerm(
                                        ConstantFactor(
                                          IntConstantFactor(
                                           3
                                          ) [IntConstantFactor]
                                        ) [ConstantFactor]
                                      ) [SingleFactorTerm]
                                    ) [SingleTermExpression]
                                  ) [LeftExpression]
                                ) [ArrayIndexer]
                              ) [SingleArrayIndexer]
                            ) [AllocatorFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExpression]
                      ) [LeftExpression]
                    ) [AssignmentFooter]
                  ) [AssignmentDesignatorStatement]
                ) [DesignatorBasedStatement]
              ) [MultipleStatements]
              ReadStatement(
                MemberAccessDesignator(
                  IdentifierDesignator(
                   c
                  ) [IdentifierDesignator]
                 i
                ) [MemberAccessDesignator]
              ) [ReadStatement]
            ) [MultipleStatements]
            ForStatement(
              ForStatementHeader(
                ForStatementHeaderStart(
                ) [ForStatementHeaderStart]
                SingleDesignatorStatement(
                  AssignmentDesignatorStatement(
                    AssignmentHeader(
                      IdentifierDesignator(
                       i
                      ) [IdentifierDesignator]
                    ) [AssignmentHeader]
                    AssignmentFooter(
                      AssignOperator(
                      ) [AssignOperator]
                      LeftExpression(
                        SingleTermExpression(
                          NoSign(
                          ) [NoSign]
                          SingleFactorTerm(
                            ConstantFactor(
                              IntConstantFactor(
                               0
                              ) [IntConstantFactor]
                            ) [ConstantFactor]
                          ) [SingleFactorTerm]
                        ) [SingleTermExpression]
                      ) [LeftExpression]
                    ) [AssignmentFooter]
                  ) [AssignmentDesignatorStatement]
                ) [SingleDesignatorStatement]
                SingleCondition(
                  SingleTermCondition(
                    SingleFactConditionTerm(
                      ComplexConditionFact(
                        LeftExpression(
                          SingleTermExpression(
                            NoSign(
                            ) [NoSign]
                            SingleFactorTerm(
                              DesignatorFactor(
                                IdentifierDesignator(
                                 i
                                ) [IdentifierDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExpression]
                        ) [LeftExpression]
                        LssOperator(
                        ) [LssOperator]
                        LeftExpression(
                          SingleTermExpression(
                            NoSign(
                            ) [NoSign]
                            SingleFactorTerm(
                              ConstantFactor(
                                IntConstantFactor(
                                 5
                                ) [IntConstantFactor]
                              ) [ConstantFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExpression]
                        ) [LeftExpression]
                      ) [ComplexConditionFact]
                    ) [SingleFactConditionTerm]
                  ) [SingleTermCondition]
                ) [SingleCondition]
                SingleDesignatorStatement(
                  IncrementDesignatorStatement(
                    IdentifierDesignator(
                     i
                    ) [IdentifierDesignator]
                  ) [IncrementDesignatorStatement]
                ) [SingleDesignatorStatement]
              ) [ForStatementHeader]
              StatementBlock(
                MultipleStatements(
                  MultipleStatements(
                    NoStatements(
                    ) [NoStatements]
                    ReadStatement(
                      ElementAccessDesignator(
                        MemberAccessDesignator(
                          IdentifierDesignator(
                           c
                          ) [IdentifierDesignator]
                         x
                        ) [MemberAccessDesignator]
                        ArrayIndexer(
                          LeftExpression(
                            SingleTermExpression(
                              NoSign(
                              ) [NoSign]
                              SingleFactorTerm(
                                DesignatorFactor(
                                  IdentifierDesignator(
                                   i
                                  ) [IdentifierDesignator]
                                ) [DesignatorFactor]
                              ) [SingleFactorTerm]
                            ) [SingleTermExpression]
                          ) [LeftExpression]
                        ) [ArrayIndexer]
                      ) [ElementAccessDesignator]
                    ) [ReadStatement]
                  ) [MultipleStatements]
                  ReadStatement(
                    ElementAccessDesignator(
                      MemberAccessDesignator(
                        MemberAccessDesignator(
                          IdentifierDesignator(
                           c
                          ) [IdentifierDesignator]
                         theA
                        ) [MemberAccessDesignator]
                       x
                      ) [MemberAccessDesignator]
                      ArrayIndexer(
                        LeftExpression(
                          SingleTermExpression(
                            NoSign(
                            ) [NoSign]
                            SingleFactorTerm(
                              DesignatorFactor(
                                IdentifierDesignator(
                                 i
                                ) [IdentifierDesignator]
                              ) [DesignatorFactor]
                            ) [SingleFactorTerm]
                          ) [SingleTermExpression]
                        ) [LeftExpression]
                      ) [ArrayIndexer]
                    ) [ElementAccessDesignator]
                  ) [ReadStatement]
                ) [MultipleStatements]
              ) [StatementBlock]
            ) [ForStatement]
          ) [MultipleStatements]
          PrintStatement(
            LeftExpression(
              SingleTermExpression(
                NoSign(
                ) [NoSign]
                SingleFactorTerm(
                  MethodCallFactor(
                    MethodCall(
                      MethodCallHeader(
                        MemberAccessDesignator(
                          IdentifierDesignator(
                           c
                          ) [IdentifierDesignator]
                         getValue
                        ) [MemberAccessDesignator]
                      ) [MethodCallHeader]
                      ActualParameters(
                        SingleActualParameter(
                          ActualParameter(
                            LeftExpression(
                              SingleTermExpression(
                                NoSign(
                                ) [NoSign]
                                SingleFactorTerm(
                                  DesignatorFactor(
                                    ElementAccessDesignator(
                                      MemberAccessDesignator(
                                        MemberAccessDesignator(
                                          IdentifierDesignator(
                                           c
                                          ) [IdentifierDesignator]
                                         theA
                                        ) [MemberAccessDesignator]
                                       x
                                      ) [MemberAccessDesignator]
                                      ArrayIndexer(
                                        LeftExpression(
                                          SingleTermExpression(
                                            NoSign(
                                            ) [NoSign]
                                            SingleFactorTerm(
                                              ConstantFactor(
                                                IntConstantFactor(
                                                 0
                                                ) [IntConstantFactor]
                                              ) [ConstantFactor]
                                            ) [SingleFactorTerm]
                                          ) [SingleTermExpression]
                                        ) [LeftExpression]
                                      ) [ArrayIndexer]
                                    ) [ElementAccessDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleFactorTerm]
                              ) [SingleTermExpression]
                            ) [LeftExpression]
                          ) [ActualParameter]
                        ) [SingleActualParameter]
                      ) [ActualParameters]
                    ) [MethodCall]
                  ) [MethodCallFactor]
                ) [SingleFactorTerm]
              ) [SingleTermExpression]
            ) [LeftExpression]
            NoPrintWidth(
            ) [NoPrintWidth]
          ) [PrintStatement]
        ) [MultipleStatements]
        DesignatorBasedStatement(
          MethodCallDesignatorStatement(
            MethodCall(
              MethodCallHeader(
                MemberAccessDesignator(
                  IdentifierDesignator(
                   c
                  ) [IdentifierDesignator]
                 m
                ) [MemberAccessDesignator]
              ) [MethodCallHeader]
              NoActualParameters(
              ) [NoActualParameters]
            ) [MethodCall]
          ) [MethodCallDesignatorStatement]
        ) [DesignatorBasedStatement]
      ) [MultipleStatements]
    ) [MethodDeclaration]
  ) [MultipleMethodDeclarations]
) [Program]
DEBUG - generator_C3.mj:2: SEMANTIC ANALYZER: Visited node: 'ProgramHeader'.
DEBUG - generator_C3.mj:3: SEMANTIC ANALYZER: Visited node: 'AbstractClassHeader'.
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - generator_C3.mj:4: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:4: SEMANTIC ANALYZER: Visited node: 'ClassVariable'.
INFO  - generator_C3.mj:4: SEMANTIC ANALYZER: Defined int array variable 'x'. Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:4: SEMANTIC ANALYZER: Visited node: 'ClassVariable'.
INFO  - generator_C3.mj:4: SEMANTIC ANALYZER: Defined int array variable 'y'. Symbol node: Field 'y': type = 'array of int', adr = 2, level = 1, parent = 'A', access modifier = public
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - generator_C3.mj:6: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:6: SEMANTIC ANALYZER: Visited node: 'ReturnType'.
DEBUG - generator_C3.mj:6: SEMANTIC ANALYZER: Visited node: 'AbstractMethodHeader'.
DEBUG - generator_C3.mj:6: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:6: SEMANTIC ANALYZER: Visited node: 'FormalParameter'.
INFO  - generator_C3.mj:6: SEMANTIC ANALYZER: Defined int formal parameter 'a'. Symbol node: Formal parameter 'a': type = 'int', adr = 1, level = 1
DEBUG - generator_C3.mj:6: SEMANTIC ANALYZER: Visited node: 'AbstractMethodDeclaration'.
INFO  - generator_C3.mj:6: SEMANTIC ANALYZER: Defined method 'getValue'. Symbol node: Abstract method 'getValue': type = 'int', adr = 0, level = 2, parent = 'A', access modifier = public
  Variable 'this': , adr = 0, level = 1
  Formal parameter 'a': type = 'int', adr = 1, level = 1
DEBUG - generator_C3.mj:3: SEMANTIC ANALYZER: Visited node: 'AbstractClassDeclaration'.
INFO  - generator_C3.mj:3: SEMANTIC ANALYZER: Defined class 'A'. Symbol node: Type 'A': type = 'abstract class', adr = 0, level = 0
DEBUG - generator_C3.mj:9: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:9: SEMANTIC ANALYZER: Visited node: 'ConstAssignment'.
INFO  - generator_C3.mj:9: SEMANTIC ANALYZER: Defined int constant 'pi'. Symbol node: Constant 'pi': type = 'int', adr = 3, level = 0
DEBUG - generator_C3.mj:9: SEMANTIC ANALYZER: Visited node: 'ConstAssignment'.
INFO  - generator_C3.mj:9: SEMANTIC ANALYZER: Defined int constant 'e'. Symbol node: Constant 'e': type = 'int', adr = 2, level = 0
DEBUG - generator_C3.mj:10: SEMANTIC ANALYZER: Visited node: 'Type'.
INFO  - generator_C3.mj:10: SEMANTIC ANALYZER: Found abstract class usage 'A'! Symbol node: Type 'A': type = 'abstract class', adr = 0, level = 0
DEBUG - generator_C3.mj:10: SEMANTIC ANALYZER: Visited node: 'ClassHeader'.
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'ClassVariable'.
INFO  - generator_C3.mj:11: SEMANTIC ANALYZER: Defined int variable 'i'. Symbol node: Field 'i': type = 'int', adr = 3, level = 1, parent = 'B', access modifier = public
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'ReturnType'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'MethodHeader'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'FormalParameter'.
INFO  - generator_C3.mj:13: SEMANTIC ANALYZER: Defined int formal parameter 'a'. Symbol node: Formal parameter 'a': type = 'int', adr = 1, level = 1
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'LocalVariable'.
INFO  - generator_C3.mj:13: SEMANTIC ANALYZER: Defined int variable 'b'. Symbol node: Variable 'b': type = 'int', adr = 2, level = 2
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'LocalVariable'.
INFO  - generator_C3.mj:13: SEMANTIC ANALYZER: Defined bool variable 'c'. Symbol node: Variable 'c': type = 'bool', adr = 3, level = 2
DEBUG - SEMANTIC ANALYZER: Visited node: 'MethodStatementListStart'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:14: SEMANTIC ANALYZER: Found local variable usage 'this'! Symbol node: Variable 'this': , adr = 0, level = 1
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:14: SEMANTIC ANALYZER: Found class 'B' field usage 'i'! Symbol node: Field 'i': type = 'int', adr = 3, level = 1, parent = 'B', access modifier = public
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:17: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:14: SEMANTIC ANALYZER: Found local variable usage 'this'! Symbol node: Variable 'this': , adr = 0, level = 1
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:14: SEMANTIC ANALYZER: Found class 'A' field usage 'x'! Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:39: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:39: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'ElementAccessDesignator'.
INFO  - generator_C3.mj:14: SEMANTIC ANALYZER: Found array element access 'this.x[0]'! Symbol node: Array element 'this.x[0]': type = 'int', adr = -1, level = -1
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:17: SEMANTIC ANALYZER: Visited node: 'MultipleTermsExpression'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:14: SEMANTIC ANALYZER: Found formal parameter usage 'a'! Symbol node: Formal parameter 'a': type = 'int', adr = 1, level = 1
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:17: SEMANTIC ANALYZER: Visited node: 'MultipleTermsExpression'.
DEBUG - generator_C3.mj:17: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:17: SEMANTIC ANALYZER: Visited node: 'ReturnStatement'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'MethodDeclaration'.
INFO  - generator_C3.mj:13: SEMANTIC ANALYZER: Defined method 'getValue'. Symbol node: Method 'getValue': type = 'int', adr = 0, level = 2, parent = 'B', access modifier = public
  Variable 'this': , adr = 0, level = 1
  Formal parameter 'a': type = 'int', adr = 1, level = 1
  Variable 'b': type = 'int', adr = 2, level = 2
  Variable 'c': type = 'bool', adr = 3, level = 2
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - SEMANTIC ANALYZER: Visited node: 'ReturnVoid'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'MethodHeader'.
DEBUG - SEMANTIC ANALYZER: Visited node: 'MethodStatementListStart'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'MethodDeclaration'.
INFO  - generator_C3.mj:16: SEMANTIC ANALYZER: Defined method 'm'. Symbol node: Method 'm': type = 'void', adr = 0, level = 1, parent = 'B', access modifier = public
  Variable 'this': , adr = 0, level = 1
DEBUG - generator_C3.mj:10: SEMANTIC ANALYZER: Visited node: 'ClassDeclaration'.
INFO  - generator_C3.mj:10: SEMANTIC ANALYZER: Defined class 'B'. Symbol node: Type 'B': type = 'class', adr = 0, level = 0
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'ClassHeader'.
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'ClassVariable'.
INFO  - generator_C3.mj:19: SEMANTIC ANALYZER: Defined  variable 'theA'. Symbol node: Field 'theA': type = 'class', adr = 4, level = 1, parent = 'C', access modifier = public
DEBUG - SEMANTIC ANALYZER: Visited node: 'PublicAccessModifier'.
DEBUG - SEMANTIC ANALYZER: Current access modifier: PUBLIC.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'ClassVariable'.
INFO  - generator_C3.mj:19: SEMANTIC ANALYZER: Defined int variable 'a'. Symbol node: Field 'a': type = 'int', adr = 5, level = 1, parent = 'C', access modifier = public
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'ClassDeclaration'.
INFO  - generator_C3.mj:19: SEMANTIC ANALYZER: Defined class 'C'. Symbol node: Type 'C': type = 'class', adr = 0, level = 0
DEBUG - SEMANTIC ANALYZER: Visited node: 'ReturnVoid'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'MethodHeader'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'LocalVariable'.
INFO  - generator_C3.mj:21: SEMANTIC ANALYZER: Defined  variable 'b'. Symbol node: Variable 'b': type = 'class', adr = 0, level = 1
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'LocalVariable'.
INFO  - generator_C3.mj:21: SEMANTIC ANALYZER: Defined  variable 'c'. Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'LocalVariable'.
INFO  - generator_C3.mj:21: SEMANTIC ANALYZER: Defined int variable 'i'. Symbol node: Variable 'i': type = 'int', adr = 2, level = 1
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'LocalVariable'.
INFO  - generator_C3.mj:21: SEMANTIC ANALYZER: Defined int array variable 'x'. Symbol node: Variable 'x': type = 'array of int', adr = 3, level = 1
DEBUG - SEMANTIC ANALYZER: Visited node: 'MethodStatementListStart'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:22: SEMANTIC ANALYZER: Found local variable usage 'b'! Symbol node: Variable 'b': type = 'class', adr = 0, level = 1
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:23: SEMANTIC ANALYZER: Found local variable usage 'b'! Symbol node: Variable 'b': type = 'class', adr = 0, level = 1
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:23: SEMANTIC ANALYZER: Found class 'A' field usage 'x'! Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:23: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:24: SEMANTIC ANALYZER: Found local variable usage 'b'! Symbol node: Variable 'b': type = 'class', adr = 0, level = 1
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:24: SEMANTIC ANALYZER: Found class 'A' field usage 'y'! Symbol node: Field 'y': type = 'array of int', adr = 2, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:24: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:25: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:26: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:26: SEMANTIC ANALYZER: Found class 'C' field usage 'theA'! Symbol node: Field 'theA': type = 'class', adr = 4, level = 1, parent = 'C', access modifier = public
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:26: SEMANTIC ANALYZER: Found local variable usage 'b'! Symbol node: Variable 'b': type = 'class', adr = 0, level = 1
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:27: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:27: SEMANTIC ANALYZER: Found class 'A' field usage 'x'! Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:22: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:13: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:27: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:28: SEMANTIC ANALYZER: Found local variable usage 'x'! Symbol node: Variable 'x': type = 'array of int', adr = 3, level = 1
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'Type'.
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:20: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:20: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:11: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:28: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:29: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:29: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:29: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:29: SEMANTIC ANALYZER: Found class 'B' field usage 'i'! Symbol node: Field 'i': type = 'int', adr = 3, level = 1, parent = 'B', access modifier = public
DEBUG - generator_C3.mj:29: SEMANTIC ANALYZER: Visited node: 'ReadStatement'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:30: SEMANTIC ANALYZER: Found local variable usage 'i'! Symbol node: Variable 'i': type = 'int', adr = 2, level = 1
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:30: SEMANTIC ANALYZER: Found local variable usage 'i'! Symbol node: Variable 'i': type = 'int', adr = 2, level = 1
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:19: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:16: SEMANTIC ANALYZER: Visited node: 'ComplexConditionFact'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:30: SEMANTIC ANALYZER: Found local variable usage 'i'! Symbol node: Variable 'i': type = 'int', adr = 2, level = 1
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'IncrementDesignatorStatement'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'ForStatementHeader'.
INFO  - generator_C3.mj:30: SEMANTIC ANALYZER: Found for loop 'none'!
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:31: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:31: SEMANTIC ANALYZER: Found class 'A' field usage 'x'! Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:31: SEMANTIC ANALYZER: Found local variable usage 'i'! Symbol node: Variable 'i': type = 'int', adr = 2, level = 1
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'ElementAccessDesignator'.
INFO  - generator_C3.mj:31: SEMANTIC ANALYZER: Found array element access 'i[i]'! Symbol node: Array element 'i[i]': type = 'int', adr = -1, level = -1
DEBUG - generator_C3.mj:31: SEMANTIC ANALYZER: Visited node: 'ReadStatement'.
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:32: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:32: SEMANTIC ANALYZER: Found class 'C' field usage 'theA'! Symbol node: Field 'theA': type = 'class', adr = 4, level = 1, parent = 'C', access modifier = public
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:32: SEMANTIC ANALYZER: Found class 'A' field usage 'x'! Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:32: SEMANTIC ANALYZER: Found local variable usage 'i'! Symbol node: Variable 'i': type = 'int', adr = 2, level = 1
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:26: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'ElementAccessDesignator'.
INFO  - generator_C3.mj:32: SEMANTIC ANALYZER: Found array element access 'i[i]'! Symbol node: Array element 'i[i]': type = 'int', adr = -1, level = -1
DEBUG - generator_C3.mj:32: SEMANTIC ANALYZER: Visited node: 'ReadStatement'.
DEBUG - generator_C3.mj:30: SEMANTIC ANALYZER: Visited node: 'ForStatement'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:34: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:34: SEMANTIC ANALYZER: Found class 'B' field usage 'getValue'! Symbol node: Method 'getValue': type = 'int', adr = 0, level = 2, parent = 'B', access modifier = public
  Variable 'this': , adr = 0, level = 1
  Formal parameter 'a': type = 'int', adr = 1, level = 1
  Variable 'b': type = 'int', adr = 2, level = 2
  Variable 'c': type = 'bool', adr = 3, level = 2
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'MethodCallHeader'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:34: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:34: SEMANTIC ANALYZER: Found class 'C' field usage 'theA'! Symbol node: Field 'theA': type = 'class', adr = 4, level = 1, parent = 'C', access modifier = public
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:34: SEMANTIC ANALYZER: Found class 'A' field usage 'x'! Symbol node: Field 'x': type = 'array of int', adr = 1, level = 1, parent = 'A', access modifier = public
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'ElementAccessDesignator'.
INFO  - generator_C3.mj:34: SEMANTIC ANALYZER: Found array element access 'c.theA.x[0]'! Symbol node: Array element 'c.theA.x[0]': type = 'int', adr = -1, level = -1
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:25: SEMANTIC ANALYZER: Visited node: 'ActualParameter'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'MethodCall'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'MethodCallFactor'.
DEBUG - generator_C3.mj:34: SEMANTIC ANALYZER: Visited node: 'SingleFactorTerm'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'LeftExpression'.
DEBUG - generator_C3.mj:14: SEMANTIC ANALYZER: Visited node: 'PrintStatement'.
DEBUG - generator_C3.mj:35: SEMANTIC ANALYZER: Visited node: 'IdentifierDesignator'.
INFO  - generator_C3.mj:35: SEMANTIC ANALYZER: Found local variable usage 'c'! Symbol node: Variable 'c': type = 'class', adr = 1, level = 1
DEBUG - generator_C3.mj:35: SEMANTIC ANALYZER: Visited node: 'MemberAccessDesignator'.
INFO  - generator_C3.mj:35: SEMANTIC ANALYZER: Found class 'B' field usage 'm'! Symbol node: Method 'm': type = 'void', adr = 0, level = 1, parent = 'B', access modifier = public
  Variable 'this': , adr = 0, level = 1
DEBUG - generator_C3.mj:35: SEMANTIC ANALYZER: Visited node: 'MethodCallHeader'.
DEBUG - generator_C3.mj:35: SEMANTIC ANALYZER: Visited node: 'MethodCall'.
DEBUG - generator_C3.mj:21: SEMANTIC ANALYZER: Visited node: 'MethodDeclaration'.
INFO  - generator_C3.mj:21: SEMANTIC ANALYZER: Defined method 'main'. Symbol node: Method 'main': type = 'void', adr = 0, level = 0
  Variable 'b': type = 'class', adr = 0, level = 1
  Variable 'c': type = 'class', adr = 1, level = 1
  Variable 'i': type = 'int', adr = 2, level = 1
  Variable 'x': type = 'array of int', adr = 3, level = 1
DEBUG - generator_C3.mj:2: SEMANTIC ANALYZER: Visited node: 'Program'.
INFO  - generator_C3.mj:2: SEMANTIC ANALYZER: Defined program 'Program'. Symbol node: Program 'Program': type = 'none', adr = 0, level = 1
  Type 'A': type = 'abstract class', adr = 0, level = 0
  Constant 'pi': type = 'int', adr = 3, level = 0
  Constant 'e': type = 'int', adr = 2, level = 0
  Type 'B': type = 'class', adr = 0, level = 0
  Type 'C': type = 'class', adr = 0, level = 0
  Method 'main': type = 'void', adr = 0, level = 0
    Variable 'b': type = 'class', adr = 0, level = 1
    Variable 'c': type = 'class', adr = 1, level = 1
    Variable 'i': type = 'int', adr = 2, level = 1
    Variable 'x': type = 'array of int', adr = 3, level = 1
DEBUG - generator_C3.mj:2: CODE GENERATOR: Visited node: 'ProgramHeader'.
DEBUG - generator_C3.mj:10: CODE GENERATOR: Visited node: 'ClassHeader'.
DEBUG - generator_C3.mj:13: CODE GENERATOR: Visited node: 'MethodHeader'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:17: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:39: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'ElementAccessDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:17: CODE GENERATOR: Visited node: 'MultipleTermsExpression'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:17: CODE GENERATOR: Visited node: 'MultipleTermsExpression'.
DEBUG - generator_C3.mj:17: CODE GENERATOR: Visited node: 'ReturnStatement'.
DEBUG - generator_C3.mj:13: CODE GENERATOR: Visited node: 'MethodDeclaration'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'MethodHeader'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'MethodDeclaration'.
DEBUG - generator_C3.mj:10: CODE GENERATOR: Visited node: 'ClassDeclaration'.
DEBUG - generator_C3.mj:19: CODE GENERATOR: Visited node: 'ClassHeader'.
DEBUG - generator_C3.mj:19: CODE GENERATOR: Visited node: 'ClassDeclaration'.
DEBUG - generator_C3.mj:21: CODE GENERATOR: Visited node: 'MethodHeader'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:11: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:23: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:23: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:23: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:23: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:23: CODE GENERATOR: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:13: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:23: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:24: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:24: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:24: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:24: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:24: CODE GENERATOR: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:13: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:24: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:25: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:25: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:25: CODE GENERATOR: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:11: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:25: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:27: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:27: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:27: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:27: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:22: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:27: CODE GENERATOR: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:13: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:27: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:28: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:28: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:28: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:20: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:28: CODE GENERATOR: Visited node: 'AllocatorFactor'.
DEBUG - generator_C3.mj:11: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:28: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:29: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:29: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:29: CODE GENERATOR: Visited node: 'ReadStatement'.
DEBUG - CODE GENERATOR: Visited node: 'ForStatementHeaderStart'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'AssignmentHeader'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'AssignmentDesignatorStatement'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'SingleDesignatorStatement'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:19: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'ComplexConditionFact'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'SingleFactConditionTerm'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'SingleTermCondition'.
DEBUG - generator_C3.mj:16: CODE GENERATOR: Visited node: 'SingleCondition'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'IncrementDesignatorStatement'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'SingleDesignatorStatement'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'ForStatementHeader'.
DEBUG - generator_C3.mj:31: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:31: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:31: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:31: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:21: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:31: CODE GENERATOR: Visited node: 'ElementAccessDesignator'.
DEBUG - generator_C3.mj:31: CODE GENERATOR: Visited node: 'ReadStatement'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:26: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'ElementAccessDesignator'.
DEBUG - generator_C3.mj:32: CODE GENERATOR: Visited node: 'ReadStatement'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'ForStatement'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:30: CODE GENERATOR: Visited node: 'IncrementDesignatorStatement'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'ConstantFactor'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'ElementAccessDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'DesignatorFactor'.
DEBUG - generator_C3.mj:25: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'MethodCall'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:34: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'SingleTermExpression'.
DEBUG - generator_C3.mj:14: CODE GENERATOR: Visited node: 'PrintStatement'.
DEBUG - generator_C3.mj:35: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:35: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:35: CODE GENERATOR: Visited node: 'MethodCall'.
DEBUG - generator_C3.mj:35: CODE GENERATOR: Visited node: 'IdentifierDesignator'.
DEBUG - generator_C3.mj:35: CODE GENERATOR: Visited node: 'MemberAccessDesignator'.
DEBUG - generator_C3.mj:21: CODE GENERATOR: Visited node: 'MethodDeclaration'.
DEBUG - generator_C3.mj:2: CODE GENERATOR: Visited node: 'Program'.
