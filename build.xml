<?xml version="1.0" encoding="UTF-8"?>
<project name="MJCompiler" default="test.all" basedir=".">

    <property name="output.dir" value="${basedir}/out/production/MJCompiler" />

    <property name="config.dir" value="config" />
    <property name="spec.dir" value="spec" />
    <property name="source.dir" value="src" />

    <path id="library.cup_v10k.classpath">
        <pathelement location="${basedir}/lib/cup_v10k.jar" />
    </path>

    <path id="library.log4j-1.2.17.classpath">
        <pathelement location="${basedir}/lib/log4j-1.2.17.jar" />
    </path>

    <path id="library.symboltable-1-1.classpath">
        <pathelement location="${basedir}/lib/symboltable-1-1.jar" />
    </path>

    <path id="library.mj-runtime-1.1.classpath">
        <pathelement location="${basedir}/lib/mj-runtime-1.1.jar" />
    </path>

    <path id="sourcepath">
        <dirset dir="${basedir}">
            <include name="${source.dir}" />
        </dirset>
    </path>

    <path id="classpath">
        <pathelement location="${config.dir}" />
        <pathelement location="${output.dir}" />
        <path refid="library.log4j-1.2.17.classpath" />
        <path refid="library.cup_v10k.classpath" />
        <path refid="library.symboltable-1-1.classpath" />
        <path refid="library.mj-runtime-1.1.classpath" />
    </path>

    <target name="clean.obj">
        <delete file="${basedir}/test/program.obj" />
    </target>

    <target name="clean.logs">
        <delete includeemptydirs="true" dir="${basedir}/logs" />
    </target>

    <target name="clean.build">
        <delete includeemptydirs="true" dir="${basedir}/out" />
    </target>

    <target name="clean.lexer">
        <delete file="${source.dir}/rs/ac/bg/etf/pp1/MJLexer.java" />
    </target>

    <target name="clean.parser">
        <delete includeemptydirs="true">
            <fileset dir="${source.dir}/rs/ac/bg/etf/pp1/ast" erroronmissingdir="false" />
            <filelist dir="${source.dir}/rs/ac/bg/etf/pp1">
                <file name="MJParser.java" />
                <file name="sym.java" />
            </filelist>
            <filelist dir="${spec.dir}">
                <file name="mjparser_astbuild.cup" />
            </filelist>
        </delete>
    </target>

    <target name="clean.all" depends="clean.obj,clean.logs,clean.build,clean.lexer,clean.parser" />

    <target name="generate.lexer" depends="clean.lexer">
        <java jar="lib/JFlex.jar" fork="true">
            <arg value="-d" />
            <arg value="${source.dir}/rs/ac/bg/etf/pp1" />
            <arg value="${spec.dir}/mjlexer.flex" />
        </java>
    </target>

    <target name="generate.parser" depends="clean.parser">
        <java jar="lib/cup_v10k.jar" fork="true">
            <arg value="-destdir" />
            <arg value="${source.dir}/rs/ac/bg/etf/pp1" />
            <arg value="-ast" />
            <arg value="src.rs.ac.bg.etf.pp1.ast" />
            <arg value="-parser" />
            <arg value="MJParser" />
<!--            <arg value="-dump_states" />-->
            <arg value="-buildtree" />
            <arg value="${spec.dir}/mjparser.cup" />
        </java>
        <!-- Replaces all of the references to the old package name in files in the "src" directory -->
        <replace dir="${source.dir}" value="rs.ac.bg.etf.pp1.ast" token="src.rs.ac.bg.etf.pp1.ast" summary="true" />
    </target>

    <target name="generate.all" depends="generate.lexer,generate.parser" />

    <target name="build">
        <mkdir dir="${output.dir}" />
        <javac destdir="${output.dir}" includeantruntime="false">
            <src refid="sourcepath" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <target name="test.lexer">
        <java classname="rs.ac.bg.etf.pp1.test.MJTestRunner" fork="true">
            <classpath refid="classpath" />
            <arg value="lexer" />
        </java>
    </target>

    <target name="test.parser">
        <java classname="rs.ac.bg.etf.pp1.test.MJTestRunner" fork="true">
            <classpath refid="classpath" />
            <arg value="parser" />
        </java>
    </target>

    <target name="test.semantic">
        <java classname="rs.ac.bg.etf.pp1.test.MJTestRunner" fork="true">
            <classpath refid="classpath" />
            <arg value="semantic" />
        </java>
    </target>

    <target name="test.codegen">
        <java classname="rs.ac.bg.etf.pp1.test.MJTestRunner" fork="true">
            <classpath refid="classpath" />
            <arg value="codegen" />
        </java>
    </target>

    <target name="test.all">
        <java classname="rs.ac.bg.etf.pp1.test.MJTestRunner" fork="true">
            <classpath refid="classpath" />
        </java>
    </target>

    <target name="disassemble">
        <java classname="rs.etf.pp1.mj.runtime.disasm">
            <arg value="test/program.obj" />
            <classpath>
                <pathelement location="lib/mj-runtime-1.1.jar" />
            </classpath>
        </java>
    </target>

    <target name="run">
        <java classname="rs.etf.pp1.mj.runtime.Run">
            <arg value="test/program.obj" />
            <classpath>
                <pathelement location="lib/mj-runtime-1.1.jar" />
            </classpath>
        </java>
    </target>

    <target name="debug">
        <java classname="rs.etf.pp1.mj.runtime.Run">
            <arg value="-debug" />
            <arg value="test/program.obj" />
            <classpath>
                <pathelement location="lib/mj-runtime-1.1.jar" />
            </classpath>
        </java>
    </target>

</project>